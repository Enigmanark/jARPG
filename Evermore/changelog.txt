Changelog
Plans:
	0.3.0:
		-Done--Make desktop assets draw from android assets so there's only one asset folder.
		--Finalize the Map System
		--Finalize the Script System
		--Finalize the Quest System
		Make the HUD.
		HUD:
			Player Stats
			Player Skills
			Equipment
			Inventory
			Key Items
			Other stuff?
		Create equipment window and system.
		--Be able to move items around
		--Create Inventory window
		--First part of Item system.
		--Make some items.
		First part of items be viewable on player. Just enough to work on combat system.
		Buying and Selling window and system.
		First part of stat system, make them viewable.
		First part of skill system, make them viewable.
		--Add Android Controls
		Keep camera from moving once the end of map has been reached
		
	0.4.0:
		
		
	0.5.0:
		Morrowind style NPC talking system.
		
	0.6.0:
		Full combat system
		
	Expansion 1:
		Event System
		More Tradeskills
		Proper Economy
		Ability to buy shops
		More Dungeons
		More Landmass
		
	Expansion 2:
		Multiplayer System
		Online Dungeons

=====Known Issues================		
NPCs and any other movable gameObject still walks off the map.
Game is too small on some Android devices.
Removing a weapon from the MainHand causes the game to crash.
Stack sizes in the bag are possessed by demons.
=========================================================================================
v0.3.6.2:
	Factory_NPC is now working as intended.
	Fixed a few quests.
	Item Manager for the Inventory is broken and causes demonic possession in stack sizes.
	Weapons are now drawn for NPCs as well.

v0.3.6:
	Mainhand weapons are now viewable on player.
	Working on Factory_NPC for NPC templates. These will be NPCs that are premade and are only placed via 
	Tiled, instead of inputting the information directly into tiled. These will be for more complex NPCs.

v0.3.5.5:
	Added display for version number to HUD.
	Moved Enums to Data package.
	New Quest System. Not all quest templates are finished, but, check the tiled directions for how to make them.
	Three quests have been added, but, there is no way of knowing what they are.
	Added Hovering names over NPCs.
	NPCs do not walk over collidable rects anymore, like eg.teleports. This should keep them from walking off the map.

v0.3.5.4:
	Worked on some more quests, none available yet though

v0.3.5.3:
	Moved current quests arraylist to quest db.
	Redesigned the quest system.
	
v0.3.5.2:
	Fixed MapLoader bug with Foreground Layers.
	Fixed Static rectangle up alignment being too high.

v0.3.5.1:
	Added activator to DPad for android.
	Added new MapObject type called Walkable. Just place over a tile and it'll override the tiles Solid state. 

v0.3.5:
	Equipment can be placed in Equipment slots, but, they don't do anything yet.
	Bag can now be opened from HUD.
	Equipment can now be opened from the HUD.
	

v0.3.4.9:
	Fixed up quarter and half height tiles not being far enough up.
	Inventory Window implementation half done.
	Made initial bag bigger.
	Diagonal pad for Android added.
	Split the tilesets into 4 different tilesets for Android.

v0.3.4.8:
	Fixed broken collision.
	Fixed Debugging Rectangles draw.
	Added statics to debugging rectangles draw.
	Added half width tiles and half height tiles. Check instructions for tiled usage.
	Added quarter width and height tiles. Check instructions for tiled usage.
	Made the move to rect a bit smaller in width.

v0.3.4.7:
	Changed how actors are drawn and how their frames are stored and stuff.
	Broke NPC and Player collison.

v0.3.4.6:
	Changed spritesheet sizes to 120x64 for preperation for weapon layering.
	Added GDX Tools to project for the automatic texture packing.
	Got one asset folder working for both Desktop and Android for development.
	Must turn on "dev" boolean in project launchers to get texture packer working.

v0.3.4:
	New tileset added.
	Instructions for use of making TiledMaps added to main directory.
	Fixed Message Window not displaying properly.

v0.3.3:
	a:
		Added Asset_Finder utility class to scan assets. Runs only on desktop.
	b:
		Changed the spritesheet loader method in Mod_Assets and the Map Loader
		utility class to use the lists generated by the Asset_Finder class to load
		those assets.
	c:
		Alpha support for Android added.
	

v0.3.2:
	a:
		Working on proper inventory window and moving items around.
	b:
		Made the inventory into the "Back Pack." It has a set size that
		is dependent on the bag being used.
	c:
		Redid the HudRenderer's drawInventory method to drawBackPack.
		It now draws the bag's slots and updates itself if the bag
		size is changed.
		
	d:
		Polished the primitive drawing of the inventory. Going to add
		placeholder icons now to be drawn over the slots.
		
	e:
		Placeholder icons are now drawn in the correct slots. The icons are
		set by the Item Factories. The stack amount is now also drawn
		in the icons bottom left corner.
	f:
		You can now pick up items and move them around. You can also
		split items by half by holding shift and clicking on an empty
		space. You can also combine stacks by just left-clicking a
		held item on an item of the same kind.
		
	g:
		Bag contents are now safeguarded against loss when changing bags.
		
	h:
		Adding test quest rewards to the test quests.

v0.3.1
	a:
		Working on implementing items.
		
	b:
		Created ItemManager. It's a database and manager in one that is attached to
		the player object. Also created ItemFactory classes for assistance in creating
		items. And even created a very basic method in HUDRenderer for drawing a
		basic inventory.
	c:
		Adding and removing items now works properly.
	d:
		Made InventoryWindowController and implement very basic functionality.
		Then made events for opening the inventory window and whatnot. Also
		made the window openable with the i key which triggers the event.
		Redesigned input and inputHandler a bit.
	e:
		Fixed broken quests.

	f:
		Actor's now have priority like the player does, with each other. I could only make
		it work with 2 npcs maximum though for now.

v0.3.0
	a:
		Combined QuestTriggerActivate and QuestTriggerCollide into just QuestTriggerScrpt.
		Having two was kind of a brainfart considering they do the exact same thing and use
		the exact same parent.
		
	b:
		quest:QUESTNAMEHERE is now a required param for QuestTriggerScript. I also added
		one optional parameter. either intParam or stringParam. Will add additional intParams
		and stringParams in the future.
		
	c:
		Added an additional optional integer or string parameter to QuestTriggerScript.
		So now you can have the quest name, and 2 integers or 2 strings as parameters, or
		a mixture of both.
		
	d:
		Added more comments.
		
	e:
		Gonna make npcs look at the player when they're talking to them.
	
	f:
		Added the facePlayer(GameCore game) method to Actor_NPC. Removed debug stuff 
		from MapLoader2. Also need to make the NPC stop trying to move when activated.
		Also fixed show rects toggle.
		
	g:
		NPCs now face the player when talking to them. Also added a timer to the
		activation handler to keep from activating multiple objects at once.

	
v0.2.0
	Inital entry for 0.2.0
	
	a:
		Working on textbox windows.
	
	b:
		Made all Logic Modules have parent class of Mod_Logic. Using this I created a new system
		for easy communication between all Logic Modules called "Post." All modules can execute
		post from the LogicSystem, with arg of an Event. LogicSystem will then execute Post with
		with that event on all other Modules. Using instanceof all modules can check if events
		are relevant to them. 
		
	c:
		Designed a new script system for Actor_NPC. Create your script and extend Script.
		Then override Script's methods of update(GameCore game) and/or activate(GameCore game)
		Then attach the script to the Actor_NPC.  
		
	d:
		Created a MapLoader utility class to seperate all of the map loading logic into
		some static methods in the MapLoader class. It finds all of the cool stuff in the
		maps and loads them into libgdx arrays in the map class as well automatically putting
		the map into the map database for you.
		
	e:
		Changed Loader_Content quite a bit to accomodate the new MapLoader.
		
	f:
		Working on adding NPCs.
	
	g:
		NPCs are now dynamically created at load time based on map objects. To create
		the npcs, set them as box objects in Tiled. Set the objects name to the NPCs
		name. Set the Type to "NPC." In the objects properties specify property name
		"SpriteSheet" and the value should be the name of the walking spritesheet.
		The NPCs are not rendered yet though.
		
	h:
		From now on all classes that draw anything related to the world maps will be
		encapsulated as Mngrs into Mod_WorldRender.
		
	i:
		New Mngr in WorldRender for drawing NPCs. NPcs are now drawn at the correct
		location from the maps and are being generated dynamically from the maps.
		Beginning work on Activating NPCs now.
		
	j:
		Working on the Activation System. At the moment I'm designing the Mod_ActivationHandler.
		I'm simultaneously implementing both Teleportation to different maps and activating NPCs
		at once. Nearly done.
		
	k:
		Created a Mod_CollisionHandler for handling Tile_Collidables. These are the parent class
		of Tile_Teleport, for work on Teleportation. The ActivationHandler and the CollisionHandler
		are very similar in design. Putting further work into the Script system for NPCs as well.
		The Activation Handler will make use of the scripts for NPCs as well as in the future
		other modules.
		
	l:
		The message script is working and the NPCs output their messages into the terminal.
		NPCs are allowed at maximum 5 scripts, but this can be expanded if need. You number
		the scripts like so, Script1, Script2, Script3. You set that as the property name
		for the NPC object in Tiled. For the value it depends on the script you want to use.
		But basically you combine the args to the script with whitespace. For the message script,
		you do it like this "Message: WRITE MESSAGE HERE". The "Message: " part will be stripped
		off during the messages creation.
	
	l:
		Teleporting to maps is now possible. The Y coordinate seems to be a bit off but
		until I get real character sheets I'm not gonna bother with tweaking it. To create a
		telepoint you create the object in Tiled. The name of the object should be the name
		of the map you're teleporting to. The Type should be "Teleport" and the properties should
		be xTo = teleX and yTo = teleY.
		
	m:
		Working on making maps addable to the engine by scanning the tiledmap folder instead
		of hardcoding them.
		
	n:
		Maps are now loaded into the engine at runtime. Everything should be working as intended.
		Now I just need to fix that damn y coordinate when teleporting..
		
	o: 
		Fixed the teleporting y coordinate. I was just being a nub. In MapController
		I subtracted the yTile from the new map's height if changing maps, or from
		the current maps height if not, then subtracted another 1. This is
		in tile coordinates. Then when I set the player's y coordinate, I multiply
		the yTile by the Tile Size.
	p:
		I think the map system may be nearing finalization. Some more testing and thinking
		about new features needs to be done before I decide. If any new features are going
		to require too large of an upheaval of the current system's design, then no.
		
	q:
		Fixed up the engine quite a bit. Did a lot of refactoring. All map objects now inherit
		GameObject. Scripts can now be attached to any GameObject, I think. At least that's what's
		intended. Some scripts are inherently only usable by certain children though, like
		the wander script. That can be changed though.
		
	r:
		The script system is now working quite a bit better. It's complicated though. The
		wander script is working, except it's buggy and needs to be fixed.
		
	s:
		Been cleaning up the engine and commenting a lot. Combined the activation systems
		handlers into a single handler and made it more generic. It now looks only for 
		GameObjects implementing Activatable and activates them. Looks like I broke
		teleporting. Probably has to do with me using the collidable interface.
		
	t:
		Fixed teleporting. I used .setAsTile() in MapLoader but .setAsTile() was using
		tile coordinates. But from mapLoader the coordinates are absolute coordinates.
		Tile_Collidable now has two versions. .setAsTile(float x, float y) and
		.setAsTileWithTileCoordinates(float, float y). I had to update the call to this
		method in MapLoader for static tiles as well, beacuse it uses that method.
		
	u:
		Working on making Collision handler more generic. It will also be a script handler.
		Teleport will be remade into a script.
		
	v:
		Tons of changes. I did the collision handler like I said, and teleports are scripts
		now. I redesigned the mapLoader quite a bit again. Collision is now a thing.
		GameObject has a few more methods. NPCs now behave quite a bit better as well.
		Moving for players and gameObjects is now a lot less weird. There's a lot of
		thigns I did, I can't remember them all.
		
	w:
		Gonna try to make gameObjects render retroactively depending on where the player is
		standing.
		Edit:
		Completed.
	
	x:
		Was pointed out that MapLoader.findStatics() may not be working correctly. 
		Gonna check it out.
		EDIT:
		Fixed.
		
	y: Starting work on Quest System.
	
	z: Started work on Message Window system to complement the quest system.
	
	1a:
		Message window system seems to be working. Had to put in some checks though
		to make sure the message window didn't open immediately again right after
		the activate button was pressed.
		
	1b:
		Implementing the quest system is proving to be far more troublesome than
		I thought. I'm having to rewrite a lot of things and create far more
		things.
	
	1c:
		Whew..think I finally fixed the MessageWindow problem popping up constantly.
		Turned out implementing the EventHandler actually screwed up the logic
		for making sure message events were not generated constantly. So I had
		to change the timer for the MessageWindow by putting it in the overriden
		update method. I also had to introduce a new boolean: "available."
		Used isAvailable() in the activation handler to keep it from constantly
		activating the game object. -_- Ugh. Took me forever to figure out this
		was what was causing it.
		
	1d:
		Quest completion events and the "you completed quest" message are now
		handled by the Quest Handler instead of the quests themselves to make
		things more simple.
		
	1e:
		Quest system is complete. Just need to add some few extra details and
		it'll be great. Just need to work out if adding npcs able to say different
		things based on the quest is worth doing until I implement the talking
		to npcs system properly.
		
v0.1.1b 
	Initial changelog entry.
	The HUD renders to the cameras coordinates instead of fixed world coordinates.
	
